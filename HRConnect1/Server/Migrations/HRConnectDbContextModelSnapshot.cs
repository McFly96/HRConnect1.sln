// <auto-generated />
using System;
using HRConnect1.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRConnect1.Server.Migrations
{
    [DbContext(typeof(HRConnectDbContext))]
    partial class HRConnectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BenefitDipendente", b =>
                {
                    b.Property<int>("BenefitsID")
                        .HasColumnType("int");

                    b.Property<int>("DipendentiID")
                        .HasColumnType("int");

                    b.HasKey("BenefitsID", "DipendentiID");

                    b.HasIndex("DipendentiID");

                    b.ToTable("BenefitDipendente");
                });

            modelBuilder.Entity("CandidatiHardSkill", b =>
                {
                    b.Property<int>("CandidatisId")
                        .HasColumnType("int");

                    b.Property<int>("HardSkillsId")
                        .HasColumnType("int");

                    b.HasKey("CandidatisId", "HardSkillsId");

                    b.HasIndex("HardSkillsId");

                    b.ToTable("CandidatiHardSkill");
                });

            modelBuilder.Entity("CandidatiSoftSkill", b =>
                {
                    b.Property<int>("CandidatisId")
                        .HasColumnType("int");

                    b.Property<int>("SoftSkillsId")
                        .HasColumnType("int");

                    b.HasKey("CandidatisId", "SoftSkillsId");

                    b.HasIndex("SoftSkillsId");

                    b.ToTable("CandidatiSoftSkill");
                });

            modelBuilder.Entity("CandidatiTitoloStudio", b =>
                {
                    b.Property<int>("CandidatisId")
                        .HasColumnType("int");

                    b.Property<int>("TitoloStudiosId")
                        .HasColumnType("int");

                    b.HasKey("CandidatisId", "TitoloStudiosId");

                    b.HasIndex("TitoloStudiosId");

                    b.ToTable("CandidatiTitoloStudio");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Benefit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Benefits");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Candidati", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CittaID")
                        .HasColumnType("int");

                    b.Property<string>("Cognome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContrattoID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CittaID");

                    b.ToTable("Candidatis");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Citta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cittas");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Colloquio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatiID")
                        .HasColumnType("int");

                    b.Property<int>("HRID")
                        .HasColumnType("int");

                    b.Property<int>("PosizioniAperteID")
                        .HasColumnType("int");

                    b.Property<int>("SedeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatiID");

                    b.HasIndex("HRID");

                    b.HasIndex("PosizioniAperteID");

                    b.HasIndex("SedeID");

                    b.ToTable("Colloquios");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Contratto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatiID")
                        .HasColumnType("int");

                    b.Property<int>("PosizioniAperteID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatiID")
                        .IsUnique();

                    b.HasIndex("PosizioniAperteID")
                        .IsUnique();

                    b.ToTable("Contrattos");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Dipendente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Cognome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SedeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SedeID");

                    b.ToTable("Dipendentes");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.HR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cognome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SedeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SedeID");

                    b.ToTable("HRs");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.HardSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HardSkills");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.PosizioniAperte", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PosizioniApertes");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Sede", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CittaNavigationId")
                        .HasColumnType("int");

                    b.Property<int>("CittàID")
                        .HasColumnType("int");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CittaNavigationId");

                    b.ToTable("Sede");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.SoftSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SoftSkills");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.TitoloStudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("NomeTitolo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TitoloStudios");
                });

            modelBuilder.Entity("BenefitDipendente", b =>
                {
                    b.HasOne("HRConnect1.Shared.Models.Benefit", null)
                        .WithMany()
                        .HasForeignKey("BenefitsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRConnect1.Shared.Models.Dipendente", null)
                        .WithMany()
                        .HasForeignKey("DipendentiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CandidatiHardSkill", b =>
                {
                    b.HasOne("HRConnect1.Shared.Models.Candidati", null)
                        .WithMany()
                        .HasForeignKey("CandidatisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRConnect1.Shared.Models.HardSkill", null)
                        .WithMany()
                        .HasForeignKey("HardSkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CandidatiSoftSkill", b =>
                {
                    b.HasOne("HRConnect1.Shared.Models.Candidati", null)
                        .WithMany()
                        .HasForeignKey("CandidatisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRConnect1.Shared.Models.SoftSkill", null)
                        .WithMany()
                        .HasForeignKey("SoftSkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CandidatiTitoloStudio", b =>
                {
                    b.HasOne("HRConnect1.Shared.Models.Candidati", null)
                        .WithMany()
                        .HasForeignKey("CandidatisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRConnect1.Shared.Models.TitoloStudio", null)
                        .WithMany()
                        .HasForeignKey("TitoloStudiosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Candidati", b =>
                {
                    b.HasOne("HRConnect1.Shared.Models.Citta", "CittaNavigation")
                        .WithMany("Candidatis")
                        .HasForeignKey("CittaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CittaNavigation");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Colloquio", b =>
                {
                    b.HasOne("HRConnect1.Shared.Models.Candidati", "CandidatiNavigation")
                        .WithMany("Colloquios")
                        .HasForeignKey("CandidatiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRConnect1.Shared.Models.HR", "HRNavigation")
                        .WithMany("Colloquios")
                        .HasForeignKey("HRID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HRConnect1.Shared.Models.PosizioniAperte", "PosizioniAperteNavigation")
                        .WithMany("Colloquios")
                        .HasForeignKey("PosizioniAperteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRConnect1.Shared.Models.Sede", "SedeNavigation")
                        .WithMany("Colloquios")
                        .HasForeignKey("SedeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CandidatiNavigation");

                    b.Navigation("HRNavigation");

                    b.Navigation("PosizioniAperteNavigation");

                    b.Navigation("SedeNavigation");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Contratto", b =>
                {
                    b.HasOne("HRConnect1.Shared.Models.Candidati", "CandidatiNavigation")
                        .WithOne("ContrattoNavigation")
                        .HasForeignKey("HRConnect1.Shared.Models.Contratto", "CandidatiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRConnect1.Shared.Models.PosizioniAperte", "PosizioniAperteNavigation")
                        .WithOne("ContrattoNavigation")
                        .HasForeignKey("HRConnect1.Shared.Models.Contratto", "PosizioniAperteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CandidatiNavigation");

                    b.Navigation("PosizioniAperteNavigation");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Dipendente", b =>
                {
                    b.HasOne("HRConnect1.Shared.Models.Sede", "SedeNavigation")
                        .WithMany("Dipendentes")
                        .HasForeignKey("SedeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SedeNavigation");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.HR", b =>
                {
                    b.HasOne("HRConnect1.Shared.Models.Sede", "SedeNavigation")
                        .WithMany("HRs")
                        .HasForeignKey("SedeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SedeNavigation");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Sede", b =>
                {
                    b.HasOne("HRConnect1.Shared.Models.Citta", "CittaNavigation")
                        .WithMany("Sedes")
                        .HasForeignKey("CittaNavigationId");

                    b.Navigation("CittaNavigation");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Candidati", b =>
                {
                    b.Navigation("Colloquios");

                    b.Navigation("ContrattoNavigation");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Citta", b =>
                {
                    b.Navigation("Candidatis");

                    b.Navigation("Sedes");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.HR", b =>
                {
                    b.Navigation("Colloquios");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.PosizioniAperte", b =>
                {
                    b.Navigation("Colloquios");

                    b.Navigation("ContrattoNavigation");
                });

            modelBuilder.Entity("HRConnect1.Shared.Models.Sede", b =>
                {
                    b.Navigation("Colloquios");

                    b.Navigation("Dipendentes");

                    b.Navigation("HRs");
                });
#pragma warning restore 612, 618
        }
    }
}
